-- MySQL Script generated by MySQL Workbench
-- 11/14/16 16:28:13
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema test_spring_hibernate
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema test_spring_hibernate
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test_spring_hibernate` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `test_spring_hibernate` ;

-- -----------------------------------------------------
-- Table `test_spring_hibernate`.`employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_spring_hibernate`.`employee` ;

CREATE TABLE IF NOT EXISTS `test_spring_hibernate`.`employee` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `brid` VARCHAR(45) NOT NULL,
  `manager_id` INT(11) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `brid_UNIQUE` (`brid` ASC),
  INDEX `fk_employee_employee1_idx` (`manager_id` ASC),
  CONSTRAINT `fk_employee_employee1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `test_spring_hibernate`.`employee` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_spring_hibernate`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_spring_hibernate`.`address` ;

CREATE TABLE IF NOT EXISTS `test_spring_hibernate`.`address` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `city` VARCHAR(45) NOT NULL,
  `employee_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `employee_id_UNIQUE` (`employee_id` ASC),
  INDEX `fk_address_employee1_idx` (`employee_id` ASC),
  CONSTRAINT `fk_address_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `test_spring_hibernate`.`employee` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test_spring_hibernate`.`email`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test_spring_hibernate`.`email` ;

CREATE TABLE IF NOT EXISTS `test_spring_hibernate`.`email` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `employee_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_email_employee_idx` (`employee_id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_email_employee`
    FOREIGN KEY (`employee_id`)
    REFERENCES `test_spring_hibernate`.`employee` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `test_spring_hibernate`.`employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_spring_hibernate`;
INSERT INTO `test_spring_hibernate`.`employee` (`name`, `brid`, `manager_id`) VALUES ('Rohit', 'G01065024', NULL);
INSERT INTO `test_spring_hibernate`.`employee` (`name`, `brid`, `manager_id`) VALUES ('Pooja', 'G01091385', 1);
INSERT INTO `test_spring_hibernate`.`employee` (`name`, `brid`, `manager_id`) VALUES ('Abhishek', 'G01065007', NULL);
INSERT INTO `test_spring_hibernate`.`employee` (`name`, `brid`, `manager_id`) VALUES ('Nitisha', 'E02141444', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_spring_hibernate`.`address`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_spring_hibernate`;
INSERT INTO `test_spring_hibernate`.`address` (`city`, `employee_id`) VALUES ('pune', 1);
INSERT INTO `test_spring_hibernate`.`address` (`city`, `employee_id`) VALUES ('pune', 2);
INSERT INTO `test_spring_hibernate`.`address` (`city`, `employee_id`) VALUES ('pune', 3);
INSERT INTO `test_spring_hibernate`.`address` (`city`, `employee_id`) VALUES ('pune', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `test_spring_hibernate`.`email`
-- -----------------------------------------------------
START TRANSACTION;
USE `test_spring_hibernate`;
INSERT INTO `test_spring_hibernate`.`email` (`email`, `employee_id`) VALUES ('rohitsingh17219@gmail.com', 1);
INSERT INTO `test_spring_hibernate`.`email` (`email`, `employee_id`) VALUES ('rohit.kumarsingh@barclaycard.co.uk', 1);
INSERT INTO `test_spring_hibernate`.`email` (`email`, `employee_id`) VALUES ('abhijaimini123@gmail.com', 3);
INSERT INTO `test_spring_hibernate`.`email` (`email`, `employee_id`) VALUES ('poojabhai@gmail.com', 2);
INSERT INTO `test_spring_hibernate`.`email` (`email`, `employee_id`) VALUES ('nitisha@gmail.com', 4);

COMMIT;

